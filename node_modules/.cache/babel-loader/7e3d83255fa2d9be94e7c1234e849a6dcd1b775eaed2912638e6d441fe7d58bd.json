{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatGpt training\\\\worldCards\\\\world\\\\src\\\\Components\\\\PagesArea\\\\About\\\\About.tsx\",\n  _s = $RefreshSig$();\nimport { NavLink } from \"react-router-dom\";\nimport \"./About.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlightsList() {\n  _s();\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [flights, setFlights] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (departure && arrival) {\n      fetch(`https://api.aviationstack.com/v1/flights?access_key=f3375848585640e5175941f88d85dc5a&dep_iata=${departure}&arr_iata=${arrival}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network is jammed');\n        }\n        return response.json();\n      }).then(data => {\n        setFlights(data.data);\n      }).catch(err => {\n        setError(err.message);\n      });\n    }\n  }, [departure, arrival]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Errrrrrrrrror: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FlightsList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flight Departures and Arrivals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Departure IATA Code\",\n        value: departure,\n        onChange: e => setDeparture(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Arrival IATA Code\",\n        value: arrival,\n        onChange: e => setArrival(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: flights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Flight \", flight.flight.iata, \" from \", flight.departure.iata, \" to \", flight.arrival.iata, \" is currently \", flight.flight_status, \".\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightsList, \"i9zryeeey88XgOnRSFcXIxLHx2Q=\");\n_c = FlightsList;\nexport function About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"About\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"this is where I do experiments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navLinkBtn\",\n      id: \"homeButton\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlightsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_c2 = About;\nvar _c, _c2;\n$RefreshReg$(_c, \"FlightsList\");\n$RefreshReg$(_c2, \"About\");","map":{"version":3,"names":["NavLink","useEffect","useState","jsxDEV","_jsxDEV","FlightsList","_s","departure","setDeparture","arrival","setArrival","flights","setFlights","error","setError","fetch","then","response","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","map","flight","index","iata","flight_status","_c","About","id","to","_c2","$RefreshReg$"],"sources":["C:/chatGpt training/worldCards/world/src/Components/PagesArea/About/About.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport \"./About.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction FlightsList() {\n    const [departure, setDeparture] = useState<string>(\"\");\n    const [arrival, setArrival] = useState<string>(\"\");\n    const [flights, setFlights] = useState([]);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (departure && arrival) {\n            fetch(`https://api.aviationstack.com/v1/flights?access_key=f3375848585640e5175941f88d85dc5a&dep_iata=${departure}&arr_iata=${arrival}`)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Network is jammed');\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    setFlights(data.data);\n                })\n                .catch(err => {\n                    setError(err.message);\n                });\n        }\n    }, [departure, arrival]);\n\n    if (error) {\n        return <p>Errrrrrrrrror: {error}</p>;\n    }\n\n    return (\n        <div className=\"FlightsList\">\n            <h2>Flight Departures and Arrivals</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Departure IATA Code\"\n                    value={departure}\n                    onChange={(e) => setDeparture(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Arrival IATA Code\"\n                    value={arrival}\n                    onChange={(e) => setArrival(e.target.value)}\n                />\n            </div>\n            <ul>\n                {flights.map((flight, index) => (\n                    <li key={index}>\n                        Flight {flight.flight.iata} from {flight.departure.iata} to {flight.arrival.iata} is currently {flight.flight_status}.\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport function About(): JSX.Element {\n    return (\n        <div className=\"About\">\n            <h1>this is where I do experiments</h1>\n            <button className=\"navLinkBtn\" id=\"homeButton\">\n                <NavLink to=\"/home\">Home</NavLink>\n            </button>\n            <FlightsList />\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}