{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatGpt training\\\\worldCards\\\\world\\\\src\\\\Components\\\\CountryArea\\\\CountryDetails\\\\CountryDetails.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport \"./CountryDetails.css\";\nimport { useEffect, useState } from \"react\";\nimport { countryService } from \"../../../Services/CountryService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryDetails() {\n  _s();\n  const params = useParams();\n  const id = +params.countryId;\n  const [country, setCountry] = useState();\n  useEffect(() => {\n    countryService.getOneCountry(n).then(country => setCountry(country)).catch(err => console.log(err.message));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CountryDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Capital: \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Popoulation: \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Continent: \", country.continents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"UN Member: \", country.unMember]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(CountryDetails, \"VXXY1aBd9VFQ5iwaMVKW4UJGF48=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["useParams","useEffect","useState","countryService","jsxDEV","_jsxDEV","CountryDetails","_s","params","id","countryId","country","setCountry","getOneCountry","n","then","catch","err","console","log","message","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","continents","unMember","_c","$RefreshReg$"],"sources":["C:/chatGpt training/worldCards/world/src/Components/CountryArea/CountryDetails/CountryDetails.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport \"./CountryDetails.css\";\nimport { useEffect, useState } from \"react\";\nimport { CountryModel } from \"../../../Models/CountryModel\";\nimport { countryService } from \"../../../Services/CountryService\";\n\nexport function CountryDetails(): JSX.Element {\n\n    const params = useParams<{countryId: string}>();\n    const id = +params.countryId;\n\n    const [country, setCountry] = useState<CountryModel>();\n\n    useEffect(() => {\n        countryService.getOneCountry(n)\n            .then(country => setCountry(country))\n            .catch(err => console.log(err.message))\n    }, [id])\n    return (\n        <div className=\"CountryDetails\">\n            <h1>{country.name}</h1>\n            <h2>Capital: {country.capital}</h2>\n            <h2>Popoulation: {country.population}</h2>\n            <h2>Continent: {country.continents}</h2>\n            <h2>UN Member: {country.unMember}</h2>\n\t\t\t\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,sBAAsB;AAC7B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,cAAc,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,SAASC,cAAcA,CAAA,EAAgB;EAAAC,EAAA;EAE1C,MAAMC,MAAM,GAAGR,SAAS,CAAsB,CAAC;EAC/C,MAAMS,EAAE,GAAG,CAACD,MAAM,CAACE,SAAS;EAE5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAe,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZE,cAAc,CAACU,aAAa,CAACC,CAAC,CAAC,CAC1BC,IAAI,CAACJ,OAAO,IAAIC,UAAU,CAACD,OAAO,CAAC,CAAC,CACpCK,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;EACR,oBACIJ,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BjB,OAAA;MAAAiB,QAAA,EAAKX,OAAO,CAACY;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBtB,OAAA;MAAAiB,QAAA,GAAI,WAAS,EAACX,OAAO,CAACiB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCtB,OAAA;MAAAiB,QAAA,GAAI,eAAa,EAACX,OAAO,CAACkB,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CtB,OAAA;MAAAiB,QAAA,GAAI,aAAW,EAACX,OAAO,CAACmB,UAAU;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCtB,OAAA;MAAAiB,QAAA,GAAI,aAAW,EAACX,OAAO,CAACoB,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEd;AAACpB,EAAA,CAtBeD,cAAc;EAAA,QAEXN,SAAS;AAAA;AAAAgC,EAAA,GAFZ1B,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}