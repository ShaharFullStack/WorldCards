{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatGpt training\\\\worldCards\\\\world\\\\src\\\\Components\\\\CountryArea\\\\CountryCard\\\\CountryCard.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CountryCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryCard(props) {\n  _s();\n  const navigate = useNavigate();\n  function showDetails() {\n    navigate(\"/country-details/\" + props.country.name.common); // Access the `common` property correctly\n  }\n\n  // Extract languages as a string\n  const languages = props.country.languages ? Object.values(props.country.languages).join(\", \") : \"No languages available\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CountryCard\",\n    onClick: showDetails,\n    role: \"button\",\n    \"aria-label\": `View details of ${props.country.name.common}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CountryDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Country: \", props.country.name.common]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Population: \", props.country.population.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Spoken Languages: \", languages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Is UN Member: \", props.country.unMember ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(CountryCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CountryCard;\nvar _c;\n$RefreshReg$(_c, \"CountryCard\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","CountryCard","props","_s","navigate","showDetails","country","name","common","languages","Object","values","join","className","onClick","role","children","fileName","_jsxFileName","lineNumber","columnNumber","population","toLocaleString","unMember","_c","$RefreshReg$"],"sources":["C:/chatGpt training/worldCards/world/src/Components/CountryArea/CountryCard/CountryCard.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { CountryModel } from \"../../../Models/CountryModel\";\nimport \"./CountryCard.css\";\n\ntype CountryCardProps = {\n    country: CountryModel;\n    onClick: (country: CountryModel) => void;\n};\n\nexport function CountryCard(props: CountryCardProps): JSX.Element {\n\n    const navigate = useNavigate();\n\n    function showDetails(): void {\n        navigate(\"/country-details/\" + props.country.name.common); // Access the `common` property correctly\n    }\n\n    // Extract languages as a string\n    const languages = props.country.languages\n        ? Object.values(props.country.languages).join(\", \")\n        : \"No languages available\";\n\n    return (\n        <div\n            className=\"CountryCard\"\n            onClick={showDetails}\n            role=\"button\"\n            aria-label={`View details of ${props.country.name.common}`}\n        >\n            <div className=\"CountryDetails\">\n                {/* <img src={props.country.flags.png} alt={`${props.country.name.common} flag`} /> */}\n                <span>Country: {props.country.name.common}</span>\n                {/* <span>Capital City: {props.country.capital?.[0] || \"N/A\"}</span> */}\n                <span>Population: {props.country.population.toLocaleString()}</span>\n                <span>Spoken Languages: {languages}</span>\n                <span>Is UN Member: {props.country.unMember ? \"Yes\" : \"No\"}</span>\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3B,OAAO,SAASC,WAAWA,CAACC,KAAuB,EAAe;EAAAC,EAAA;EAE9D,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,SAASO,WAAWA,CAAA,EAAS;IACzBD,QAAQ,CAAC,mBAAmB,GAAGF,KAAK,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC/D;;EAEA;EACA,MAAMC,SAAS,GAAGP,KAAK,CAACI,OAAO,CAACG,SAAS,GACnCC,MAAM,CAACC,MAAM,CAACT,KAAK,CAACI,OAAO,CAACG,SAAS,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,GACjD,wBAAwB;EAE9B,oBACIZ,OAAA;IACIa,SAAS,EAAC,aAAa;IACvBC,OAAO,EAAET,WAAY;IACrBU,IAAI,EAAC,QAAQ;IACb,cAAY,mBAAmBb,KAAK,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,EAAG;IAAAQ,QAAA,eAE3DhB,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAG,QAAA,gBAE3BhB,OAAA;QAAAgB,QAAA,GAAM,WAAS,EAACd,KAAK,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAEjDpB,OAAA;QAAAgB,QAAA,GAAM,cAAY,EAACd,KAAK,CAACI,OAAO,CAACe,UAAU,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEpB,OAAA;QAAAgB,QAAA,GAAM,oBAAkB,EAACP,SAAS;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CpB,OAAA;QAAAgB,QAAA,GAAM,gBAAc,EAACd,KAAK,CAACI,OAAO,CAACiB,QAAQ,GAAG,KAAK,GAAG,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CA9BeF,WAAW;EAAA,QAENH,WAAW;AAAA;AAAA0B,EAAA,GAFhBvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}