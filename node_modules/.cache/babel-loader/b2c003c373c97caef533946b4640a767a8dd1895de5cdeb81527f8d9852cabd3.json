{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatGpt training\\\\worldCards\\\\world\\\\src\\\\Components\\\\PagesArea\\\\About\\\\About.tsx\",\n  _s = $RefreshSig$();\nimport \"./About.css\";\nfetch('\"https://restcountries.com/v3.1/all\"');\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setUsers(data)).catch(err => setError(err.message));\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersList, \"W8dPUmt9Ai9400zDPm7RH8jUmB4=\");\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["fetch","React","useEffect","useState","jsxDEV","_jsxDEV","UsersList","_s","users","setUsers","error","setError","then","response","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","id","_c","$RefreshReg$"],"sources":["C:/chatGpt training/worldCards/world/src/Components/PagesArea/About/About.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport \"./About.css\";\n\nfetch('\"https://restcountries.com/v3.1/all\"')\nimport React, { useEffect, useState } from 'react';\n\nfunction UsersList() {\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(data => setUsers(data))\n            .catch(err => setError(err.message));\n    }, []);\n\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n            <h2>Users List</h2>\n            <ul>\n                {users.map(user => (\n                    <li key={user.id}>{user.name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default UsersList;\n"],"mappings":";;AACA,OAAO,aAAa;AAEpBA,KAAK,CAAC,sCAAsC,CAAC;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZF,KAAK,CAAC,4CAA4C,CAAC,CAC9CY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIN,QAAQ,CAACM,GAAG,CAACC,OAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIR,KAAK,EAAE,oBAAOL,OAAA;IAAAc,QAAA,GAAG,SAAO,EAACT,KAAK;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvC,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAAc,QAAA,EACKX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACXpB,OAAA;QAAAc,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAChB,EAAA,CAvBQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}