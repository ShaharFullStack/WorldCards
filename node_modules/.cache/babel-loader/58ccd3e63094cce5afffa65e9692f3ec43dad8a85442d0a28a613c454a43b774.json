{"ast":null,"code":"import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass CountryService {\n  async getAllCountries() {\n    const response = await axios.get(appConfig.countriesUrl);\n    const countries = response.data;\n    return countries;\n  }\n  async getOneCountry(name) {\n    const response = await axios.get(`${appConfig.countriesUrl}/${name}`);\n    return response.data;\n  }\n}\nexport const countryService = new CountryService();","map":{"version":3,"names":["axios","appConfig","CountryService","getAllCountries","response","get","countriesUrl","countries","data","getOneCountry","name","countryService"],"sources":["C:/chatGpt training/worldCards/world/src/Services/CountryService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { CountryModel } from \"../Models/CountryModel\";\nimport { appConfig } from \"../Utils/AppConfig\";\n\nclass CountryService {\n\n    public async getAllCountries(): Promise<CountryModel[]> {\n        const response = await axios.get<CountryModel[]>(appConfig.countriesUrl);\n        const countries = response.data;\n        return countries;\n    }\n\n    public async getOneCountry(name: string): Promise<CountryModel> {\n        const response = await axios.get<CountryModel>(`${appConfig.countriesUrl}/${name}`);\n        return response.data;\n    }\n}\n\nexport const countryService = new CountryService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,cAAc,CAAC;EAEjB,MAAaC,eAAeA,CAAA,EAA4B;IACpD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAiBJ,SAAS,CAACK,YAAY,CAAC;IACxE,MAAMC,SAAS,GAAGH,QAAQ,CAACI,IAAI;IAC/B,OAAOD,SAAS;EACpB;EAEA,MAAaE,aAAaA,CAACC,IAAY,EAAyB;IAC5D,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAe,GAAGJ,SAAS,CAACK,YAAY,IAAII,IAAI,EAAE,CAAC;IACnF,OAAON,QAAQ,CAACI,IAAI;EACxB;AACJ;AAEA,OAAO,MAAMG,cAAc,GAAG,IAAIT,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}